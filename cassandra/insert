var ExpressCassandra = require('express-cassandra');
var models = ExpressCassandra.createClient({
    clientOptions: {
        contactPoints: ['127.0.0.1'],
        protocolOptions: { port: 9042 },
        keyspace: 'mykeyspace',
        queryOptions: {consistency: ExpressCassandra.consistencies.one}
    },
    ormOptions: {
        defaultReplicationStrategy : {
            class: 'SimpleStrategy',
            replication_factor: 1
        },
        migration: 'safe',
    }
});

var instructorModel = models.loadSchema('instructor', {
    fields:{
        courseId: "int",
        imageUrl: "text",
        name: "text",
        headline: "text",
        body: "text",
        reviewsIcon: "text",
        reviews: "int",
        rating: "int",
        ratingIcon: "text",
        numOfStudents: "int",
        studentsIcon: "text",
        numOfCourses: "int",
        courseIcon: "text"
    },
    courseId:["name"]
});

// instructorModel or models.instance.Person can now be used as the model instance
console.log(models.instance.Person === instructorModel);

// sync the schema definition with the cassandra database table
// if the schema has not changed, the callback will fire immediately
// otherwise express-cassandra will try to migrate the schema and fire the callback afterwards
instructorModel.syncDB(function(err, result) {
    if (err) {
       console.log('Error');
    } else {
        console.log('Success');
    }
    // result == true if any database schema was updated
    // result == false if no schema change was detected in your models
});